{"ast":null,"code":"// API Service para TuGood TuGo - Versión con Mock API Fallback\nimport { mockApiService } from './mockApi';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nlet USE_MOCK_API = true; // Activar mock API por defecto para producción\n\n/**\n * Realiza petición con fallback a mock API\n */\nconst apiRequest = async (endpoint, options = {}) => {\n  if (USE_MOCK_API) {\n    return await handleMockRequest(endpoint, options);\n  }\n  const url = `${API_BASE_URL}${endpoint}`;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    },\n    ...options\n  };\n  try {\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.warn(`API Error (${endpoint}), usando mock:`, error);\n    USE_MOCK_API = true;\n    return await handleMockRequest(endpoint, options);\n  }\n};\n\n/**\n * Maneja peticiones mock\n */\nconst handleMockRequest = async (endpoint, options = {}) => {\n  const method = options.method || 'GET';\n  const body = options.body ? JSON.parse(options.body) : {};\n  if (endpoint === '/auth/register' && method === 'POST') {\n    return await mockApiService.register(body);\n  }\n  if (endpoint === '/auth/login' && method === 'POST') {\n    return await mockApiService.login(body);\n  }\n  if (endpoint === '/auth/profile' && method === 'GET') {\n    return await mockApiService.getProfile();\n  }\n  if (endpoint === '/comercios' && method === 'GET') {\n    return await mockApiService.getComercios();\n  }\n  if (endpoint.startsWith('/comercios/') && method === 'GET') {\n    const id = endpoint.split('/')[2];\n    return await mockApiService.getComercio(id);\n  }\n  if (endpoint === '/packs' && method === 'GET') {\n    return await mockApiService.getPacks();\n  }\n  if (endpoint.startsWith('/packs/') && method === 'GET') {\n    const id = endpoint.split('/')[2];\n    return await mockApiService.getPackById(id);\n  }\n  if (endpoint === '/pedidos' && method === 'GET') {\n    return await mockApiService.getPedidos();\n  }\n  if (endpoint === '/pedidos' && method === 'POST') {\n    return await mockApiService.createPedido(body);\n  }\n  return {\n    success: true,\n    message: 'Mock API',\n    data: {}\n  };\n};\n\n// Auth API\nexport const authAPI = {\n  async register(userData) {\n    return await apiRequest('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  },\n  async login(credentials) {\n    const response = await apiRequest('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n    if (response.success && response.token) {\n      localStorage.setItem('tugood_token', response.token);\n      localStorage.setItem('tugood_user', JSON.stringify(response.user));\n    }\n    return response;\n  },\n  async getProfile() {\n    return await apiRequest('/auth/profile');\n  },\n  getCurrentUser() {\n    try {\n      const user = localStorage.getItem('tugood_user');\n      return user ? JSON.parse(user) : null;\n    } catch {\n      return null;\n    }\n  },\n  getToken() {\n    return localStorage.getItem('tugood_token');\n  },\n  isAuthenticated() {\n    const token = this.getToken();\n    const user = this.getCurrentUser();\n    console.log('Verificando autenticación - Token:', !!token, 'User:', !!user);\n    return !!(token && user);\n  },\n  logout() {\n    localStorage.removeItem('tugood_token');\n    localStorage.removeItem('tugood_user');\n  }\n};\n\n// Comercios API\nexport const comerciosAPI = {\n  async getAll(filtros = {}) {\n    const params = new URLSearchParams(filtros).toString();\n    const endpoint = params ? `/comercios?${params}` : '/comercios';\n    return await apiRequest(endpoint);\n  },\n  async getById(id) {\n    return await apiRequest(`/comercios/${id}`);\n  }\n};\n\n// Packs API\nexport const packsAPI = {\n  async getAll(comercioId = null) {\n    const endpoint = comercioId ? `/packs?comercio_id=${comercioId}` : '/packs';\n    return await apiRequest(endpoint);\n  },\n  async getById(id) {\n    return await apiRequest(`/packs/${id}`);\n  }\n};\n\n// Pedidos API\nexport const pedidosAPI = {\n  async getAll() {\n    return await apiRequest('/pedidos');\n  },\n  async create(pedidoData) {\n    return await apiRequest('/pedidos', {\n      method: 'POST',\n      body: JSON.stringify(pedidoData)\n    });\n  },\n  async getById(id) {\n    return await apiRequest(`/pedidos/${id}`);\n  },\n  async update(id, data) {\n    return await apiRequest(`/pedidos/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  }\n};\n\n// Pagos API\nexport const pagosAPI = {\n  async getPaymentMethods() {\n    return {\n      success: true,\n      metodos: [{\n        id: 'efectivo',\n        nombre: 'Efectivo',\n        icono: 'cash'\n      }, {\n        id: 'tarjeta',\n        nombre: 'Tarjeta',\n        icono: 'card'\n      }, {\n        id: 'nequi',\n        nombre: 'Nequi',\n        icono: 'mobile'\n      }]\n    };\n  },\n  async process(paymentData) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return {\n      success: true,\n      message: 'Pago procesado exitosamente',\n      transactionId: 'tx_' + Date.now()\n    };\n  }\n};\n\n// Users API\nexport const usersAPI = {\n  async getProfile() {\n    return await mockApiService.getProfile();\n  },\n  async updateProfile(userData) {\n    return await mockApiService.updateProfile(userData);\n  },\n  async getStats() {\n    return {\n      success: true,\n      stats: {\n        pedidos_realizados: 12,\n        dinero_ahorrado: 85000,\n        comida_rescatada: 8.5,\n        co2_evitado: 12.3\n      }\n    };\n  }\n};\n\n// Export default para compatibilidad\nexport default {\n  authAPI,\n  comerciosAPI,\n  packsAPI,\n  pedidosAPI\n};","map":{"version":3,"names":["mockApiService","API_BASE_URL","process","env","REACT_APP_API_URL","USE_MOCK_API","apiRequest","endpoint","options","handleMockRequest","url","config","headers","response","fetch","ok","Error","status","json","error","console","warn","method","body","JSON","parse","register","login","getProfile","getComercios","startsWith","id","split","getComercio","getPacks","getPackById","getPedidos","createPedido","success","message","data","authAPI","userData","stringify","credentials","token","localStorage","setItem","user","getCurrentUser","getItem","getToken","isAuthenticated","log","logout","removeItem","comerciosAPI","getAll","filtros","params","URLSearchParams","toString","getById","packsAPI","comercioId","pedidosAPI","create","pedidoData","update","pagosAPI","getPaymentMethods","metodos","nombre","icono","paymentData","Promise","resolve","setTimeout","transactionId","Date","now","usersAPI","updateProfile","getStats","stats","pedidos_realizados","dinero_ahorrado","comida_rescatada","co2_evitado"],"sources":["C:/Users/PERSONAL/Downloads/tugood tugo/src/services/api.js"],"sourcesContent":["// API Service para TuGood TuGo - Versión con Mock API Fallback\nimport { mockApiService } from './mockApi';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nlet USE_MOCK_API = true; // Activar mock API por defecto para producción\n\n/**\n * Realiza petición con fallback a mock API\n */\nconst apiRequest = async (endpoint, options = {}) => {\n  if (USE_MOCK_API) {\n    return await handleMockRequest(endpoint, options);\n  }\n\n  const url = `${API_BASE_URL}${endpoint}`;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options\n  };\n  \n  try {\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.warn(`API Error (${endpoint}), usando mock:`, error);\n    USE_MOCK_API = true;\n    return await handleMockRequest(endpoint, options);\n  }\n};\n\n/**\n * Maneja peticiones mock\n */\nconst handleMockRequest = async (endpoint, options = {}) => {\n  const method = options.method || 'GET';\n  const body = options.body ? JSON.parse(options.body) : {};\n\n  if (endpoint === '/auth/register' && method === 'POST') {\n    return await mockApiService.register(body);\n  }\n  if (endpoint === '/auth/login' && method === 'POST') {\n    return await mockApiService.login(body);\n  }\n  if (endpoint === '/auth/profile' && method === 'GET') {\n    return await mockApiService.getProfile();\n  }\n  if (endpoint === '/comercios' && method === 'GET') {\n    return await mockApiService.getComercios();\n  }\n  if (endpoint.startsWith('/comercios/') && method === 'GET') {\n    const id = endpoint.split('/')[2];\n    return await mockApiService.getComercio(id);\n  }\n  if (endpoint === '/packs' && method === 'GET') {\n    return await mockApiService.getPacks();\n  }\n  if (endpoint.startsWith('/packs/') && method === 'GET') {\n    const id = endpoint.split('/')[2];\n    return await mockApiService.getPackById(id);\n  }\n  if (endpoint === '/pedidos' && method === 'GET') {\n    return await mockApiService.getPedidos();\n  }\n  if (endpoint === '/pedidos' && method === 'POST') {\n    return await mockApiService.createPedido(body);\n  }\n\n  return { success: true, message: 'Mock API', data: {} };\n};\n\n// Auth API\nexport const authAPI = {\n  async register(userData) {\n    return await apiRequest('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  },\n\n  async login(credentials) {\n    const response = await apiRequest('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n    \n    if (response.success && response.token) {\n      localStorage.setItem('tugood_token', response.token);\n      localStorage.setItem('tugood_user', JSON.stringify(response.user));\n    }\n    \n    return response;\n  },\n\n  async getProfile() {\n    return await apiRequest('/auth/profile');\n  },\n\n  getCurrentUser() {\n    try {\n      const user = localStorage.getItem('tugood_user');\n      return user ? JSON.parse(user) : null;\n    } catch {\n      return null;\n    }\n  },\n\n  getToken() {\n    return localStorage.getItem('tugood_token');\n  },\n\n  isAuthenticated() {\n    const token = this.getToken();\n    const user = this.getCurrentUser();\n    console.log('Verificando autenticación - Token:', !!token, 'User:', !!user);\n    return !!(token && user);\n  },\n\n  logout() {\n    localStorage.removeItem('tugood_token');\n    localStorage.removeItem('tugood_user');\n  }\n};\n\n// Comercios API\nexport const comerciosAPI = {\n  async getAll(filtros = {}) {\n    const params = new URLSearchParams(filtros).toString();\n    const endpoint = params ? `/comercios?${params}` : '/comercios';\n    return await apiRequest(endpoint);\n  },\n\n  async getById(id) {\n    return await apiRequest(`/comercios/${id}`);\n  }\n};\n\n// Packs API\nexport const packsAPI = {\n  async getAll(comercioId = null) {\n    const endpoint = comercioId ? `/packs?comercio_id=${comercioId}` : '/packs';\n    return await apiRequest(endpoint);\n  },\n\n  async getById(id) {\n    return await apiRequest(`/packs/${id}`);\n  }\n};\n\n// Pedidos API\nexport const pedidosAPI = {\n  async getAll() {\n    return await apiRequest('/pedidos');\n  },\n\n  async create(pedidoData) {\n    return await apiRequest('/pedidos', {\n      method: 'POST',\n      body: JSON.stringify(pedidoData)\n    });\n  },\n\n  async getById(id) {\n    return await apiRequest(`/pedidos/${id}`);\n  },\n\n  async update(id, data) {\n    return await apiRequest(`/pedidos/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  }\n};\n\n// Pagos API\nexport const pagosAPI = {\n  async getPaymentMethods() {\n    return {\n      success: true,\n      metodos: [\n        { id: 'efectivo', nombre: 'Efectivo', icono: 'cash' },\n        { id: 'tarjeta', nombre: 'Tarjeta', icono: 'card' },\n        { id: 'nequi', nombre: 'Nequi', icono: 'mobile' }\n      ]\n    };\n  },\n\n  async process(paymentData) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return {\n      success: true,\n      message: 'Pago procesado exitosamente',\n      transactionId: 'tx_' + Date.now()\n    };\n  }\n};\n\n// Users API\nexport const usersAPI = {\n  async getProfile() {\n    return await mockApiService.getProfile();\n  },\n\n  async updateProfile(userData) {\n    return await mockApiService.updateProfile(userData);\n  },\n\n  async getStats() {\n    return {\n      success: true,\n      stats: {\n        pedidos_realizados: 12,\n        dinero_ahorrado: 85000,\n        comida_rescatada: 8.5,\n        co2_evitado: 12.3\n      }\n    };\n  }\n};\n\n// Export default para compatibilidad\nexport default {\n  authAPI,\n  comerciosAPI,\n  packsAPI,\n  pedidosAPI\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}