{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nimport logger from '../utils/logger';\nimport { hasSignificantMovement } from '../utils/geoUtils';\nconst useGeolocation = (options = {}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [position, setPosition] = useState(null);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [permissionStatus, setPermissionStatus] = useState('prompt');\n  const defaultOptions = {\n    enableHighAccuracy: true,\n    timeout: 10000,\n    // Reducir timeout a 10 segundos\n    maximumAge: 60000,\n    // Reducir cache a 1 minuto\n    ...options\n  };\n\n  // Verificar permisos de geolocalización al montar el componente\n  useEffect(() => {\n    const checkPermissions = async () => {\n      if ('permissions' in navigator) {\n        try {\n          const permission = await navigator.permissions.query({\n            name: 'geolocation'\n          });\n          setPermissionStatus(permission.state);\n\n          // Escuchar cambios en los permisos\n          permission.addEventListener('change', () => {\n            setPermissionStatus(permission.state);\n            logger.location('Permiso de geolocalización cambió a:', permission.state);\n          });\n        } catch (error) {\n          logger.error('Error checking geolocation permissions:', error);\n        }\n      }\n    };\n    checkPermissions();\n  }, []);\n  const getCurrentPosition = useCallback(() => {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        const error = new Error('Geolocation is not supported by this browser');\n        error.code = 'NOT_SUPPORTED';\n        reject(error);\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      navigator.geolocation.getCurrentPosition(position => {\n        const currentCoords = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n\n        // Check if movement is significant before updating\n        if (hasSignificantMovement(currentCoords, lastPosition === null || lastPosition === void 0 ? void 0 : lastPosition.coords, 200)) {\n          logger.location('Ubicación obtenida - movimiento significativo', currentCoords);\n          setPosition(position);\n          setLastPosition(position);\n        } else {\n          logger.debug('Movimiento menor a 200m, no actualizando ubicación');\n        }\n        setLoading(false);\n        resolve(position);\n      }, error => {\n        logger.error('Error getting location', error);\n        let errorMessage = 'No se pudo obtener tu ubicación. ';\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            errorMessage += 'Permiso denegado. Por favor, permite el acceso a la ubicación.';\n            break;\n          case error.POSITION_UNAVAILABLE:\n            errorMessage += 'Ubicación no disponible.';\n            break;\n          case error.TIMEOUT:\n            errorMessage += 'Tiempo de espera agotado.';\n            break;\n          default:\n            errorMessage += 'Error desconocido.';\n            break;\n        }\n        const enhancedError = new Error(errorMessage);\n        enhancedError.code = error.code;\n        enhancedError.originalError = error;\n        setError(enhancedError);\n        setLoading(false);\n        reject(enhancedError);\n      }, defaultOptions);\n    });\n  }, [defaultOptions]);\n  const findClosestZone = useCallback((zones, latitude, longitude) => {\n    if (!zones || zones.length === 0) return null;\n    let closestZone = zones[0];\n    let minDistance = Infinity;\n    zones.forEach(zone => {\n      const distance = Math.sqrt(Math.pow(zone.coords.lat - latitude, 2) + Math.pow(zone.coords.lng - longitude, 2));\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestZone = zone;\n      }\n    });\n    logger.location('Zona más cercana encontrada', closestZone);\n    return closestZone;\n  }, []);\n\n  // Función para solicitar permisos de ubicación de manera más amigable\n  const requestLocationPermission = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Intentar obtener la ubicación para activar el prompt de permisos\n      const position = await getCurrentPosition();\n      return position;\n    } catch (error) {\n      // Si el error es por permisos denegados, mostrar mensaje específico\n      if (error.code === 1) {\n        // PERMISSION_DENIED\n        setError(new Error('Para una mejor experiencia, permite el acceso a tu ubicación en la configuración del navegador.'));\n      }\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [getCurrentPosition]);\n\n  // Función para obtener ubicación con reintentos\n  const getLocationWithRetry = useCallback(async (maxRetries = 2) => {\n    let lastError;\n    for (let i = 0; i <= maxRetries; i++) {\n      try {\n        const position = await getCurrentPosition();\n        return position;\n      } catch (error) {\n        lastError = error;\n        logger.warn(`Intento ${i + 1} de obtener ubicación falló:`, error.message);\n\n        // Si es error de permisos, no reintentar\n        if (error.code === 1) break;\n\n        // Esperar un poco antes del siguiente intento\n        if (i < maxRetries) {\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      }\n    }\n    throw lastError;\n  }, [getCurrentPosition]);\n  return {\n    loading,\n    error,\n    position,\n    permissionStatus,\n    getCurrentPosition,\n    requestLocationPermission,\n    getLocationWithRetry,\n    findClosestZone\n  };\n};\n_s(useGeolocation, \"iieAPh7KyWcFMTMWHAZx8SnEiHM=\");\nexport default useGeolocation;","map":{"version":3,"names":["useState","useCallback","useEffect","logger","hasSignificantMovement","useGeolocation","options","_s","loading","setLoading","error","setError","position","setPosition","lastPosition","setLastPosition","permissionStatus","setPermissionStatus","defaultOptions","enableHighAccuracy","timeout","maximumAge","checkPermissions","navigator","permission","permissions","query","name","state","addEventListener","location","getCurrentPosition","Promise","resolve","reject","geolocation","Error","code","currentCoords","lat","coords","latitude","lng","longitude","debug","errorMessage","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enhancedError","originalError","findClosestZone","zones","length","closestZone","minDistance","Infinity","forEach","zone","distance","Math","sqrt","pow","requestLocationPermission","getLocationWithRetry","maxRetries","lastError","i","warn","message","setTimeout"],"sources":["C:/Users/PERSONAL/Downloads/tugood tugo/src/hooks/useGeolocation.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport logger from '../utils/logger';\nimport { hasSignificantMovement } from '../utils/geoUtils';\n\nconst useGeolocation = (options = {}) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [position, setPosition] = useState(null);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [permissionStatus, setPermissionStatus] = useState('prompt');\n\n  const defaultOptions = {\n    enableHighAccuracy: true,\n    timeout: 10000, // Reducir timeout a 10 segundos\n    maximumAge: 60000, // Reducir cache a 1 minuto\n    ...options\n  };\n\n  // Verificar permisos de geolocalización al montar el componente\n  useEffect(() => {\n    const checkPermissions = async () => {\n      if ('permissions' in navigator) {\n        try {\n          const permission = await navigator.permissions.query({ name: 'geolocation' });\n          setPermissionStatus(permission.state);\n          \n          // Escuchar cambios en los permisos\n          permission.addEventListener('change', () => {\n            setPermissionStatus(permission.state);\n            logger.location('Permiso de geolocalización cambió a:', permission.state);\n          });\n        } catch (error) {\n          logger.error('Error checking geolocation permissions:', error);\n        }\n      }\n    };\n\n    checkPermissions();\n  }, []);\n\n  const getCurrentPosition = useCallback(() => {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        const error = new Error('Geolocation is not supported by this browser');\n        error.code = 'NOT_SUPPORTED';\n        reject(error);\n        return;\n      }\n\n      setLoading(true);\n      setError(null);\n\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const currentCoords = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          \n          // Check if movement is significant before updating\n          if (hasSignificantMovement(currentCoords, lastPosition?.coords, 200)) {\n            logger.location('Ubicación obtenida - movimiento significativo', currentCoords);\n            setPosition(position);\n            setLastPosition(position);\n          } else {\n            logger.debug('Movimiento menor a 200m, no actualizando ubicación');\n          }\n          \n          setLoading(false);\n          resolve(position);\n        },\n        (error) => {\n          logger.error('Error getting location', error);\n          \n          let errorMessage = 'No se pudo obtener tu ubicación. ';\n          switch(error.code) {\n            case error.PERMISSION_DENIED:\n              errorMessage += 'Permiso denegado. Por favor, permite el acceso a la ubicación.';\n              break;\n            case error.POSITION_UNAVAILABLE:\n              errorMessage += 'Ubicación no disponible.';\n              break;\n            case error.TIMEOUT:\n              errorMessage += 'Tiempo de espera agotado.';\n              break;\n            default:\n              errorMessage += 'Error desconocido.';\n              break;\n          }\n          \n          const enhancedError = new Error(errorMessage);\n          enhancedError.code = error.code;\n          enhancedError.originalError = error;\n          \n          setError(enhancedError);\n          setLoading(false);\n          reject(enhancedError);\n        },\n        defaultOptions\n      );\n    });\n  }, [defaultOptions]);\n\n  const findClosestZone = useCallback((zones, latitude, longitude) => {\n    if (!zones || zones.length === 0) return null;\n    \n    let closestZone = zones[0];\n    let minDistance = Infinity;\n    \n    zones.forEach(zone => {\n      const distance = Math.sqrt(\n        Math.pow(zone.coords.lat - latitude, 2) + \n        Math.pow(zone.coords.lng - longitude, 2)\n      );\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestZone = zone;\n      }\n    });\n    \n    logger.location('Zona más cercana encontrada', closestZone);\n    return closestZone;\n  }, []);\n\n  // Función para solicitar permisos de ubicación de manera más amigable\n  const requestLocationPermission = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Intentar obtener la ubicación para activar el prompt de permisos\n      const position = await getCurrentPosition();\n      return position;\n    } catch (error) {\n      // Si el error es por permisos denegados, mostrar mensaje específico\n      if (error.code === 1) { // PERMISSION_DENIED\n        setError(new Error('Para una mejor experiencia, permite el acceso a tu ubicación en la configuración del navegador.'));\n      }\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [getCurrentPosition]);\n\n  // Función para obtener ubicación con reintentos\n  const getLocationWithRetry = useCallback(async (maxRetries = 2) => {\n    let lastError;\n    \n    for (let i = 0; i <= maxRetries; i++) {\n      try {\n        const position = await getCurrentPosition();\n        return position;\n      } catch (error) {\n        lastError = error;\n        logger.warn(`Intento ${i + 1} de obtener ubicación falló:`, error.message);\n        \n        // Si es error de permisos, no reintentar\n        if (error.code === 1) break;\n        \n        // Esperar un poco antes del siguiente intento\n        if (i < maxRetries) {\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      }\n    }\n    \n    throw lastError;\n  }, [getCurrentPosition]);\n\n  return {\n    loading,\n    error,\n    position,\n    permissionStatus,\n    getCurrentPosition,\n    requestLocationPermission,\n    getLocationWithRetry,\n    findClosestZone\n  };\n};\n\nexport default useGeolocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}